@model PaginatedList<web.Models.Knjiga>
@using help
@{
    ViewData["Title"] = "Index";
}

<h1>Knjige</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <p>
        Search by name: <input type="text" name="searchString" />
        <input type="submit" value="Search" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <span>@Html.DisplayNameFor(model => model[0].KnjigaId)</span>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NaslovSortParm"]">
                    @Html.DisplayNameFor(model => model[0].Naslov)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AvtorSortParm"]">
                    @Html.DisplayNameFor(model => model[0].Avtor)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ZvrstSortParm"]">
                    @Html.DisplayNameFor(model => model[0].Zvrst)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["KategorijaSortParm"]">
                    @Html.DisplayNameFor(model => model[0].Kategorija)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["OcenaSortParm"]">
                    @Html.DisplayNameFor(model => model[0].Ocena)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                <span>@Html.DisplayFor(modelItem => item.KnjigaId)</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Naslov)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Avtor.PriimekIme)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zvrst.ImeZvrsti)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kategorija.imeKategorije)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ocena)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.KnjigaId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.KnjigaId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.KnjigaId">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<div class="pagination">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.PageIndex - 1)">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" href="?page=@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.PageIndex + 1)">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>
